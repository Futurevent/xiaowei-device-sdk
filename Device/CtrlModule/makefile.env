
#取当前目录
override DIR_CUR=$(shell pwd)

#取所有字目录，排除当前目录 & EXCLUDE_DIRS
override ALL_SUB_DIRS:=$(shell find $(DIR_CUR) -maxdepth 1 -type d)
override ALL_SUB_DIRS:=$(filter-out $(addprefix $(DIR_CUR)/,$(notdir $(EXCLUDE_DIRS))),$(ALL_SUB_DIRS))
override ALL_SUB_DIRS:=$(filter-out $(DIR_CUR),$(ALL_SUB_DIRS))
override ALL_SUB_DIRS_TRG:=$(addsuffix .dirbuild,$(ALL_SUB_DIRS))


#所有支持的源文件后缀
SRCEXTS = .c .C .cc .cpp .CPP .c++ .cxx .cp

#取当前目录的全部源文件
override SRCS_CUR_DIR:=$(foreach d,$(DIR_CUR),$(wildcard $(addprefix $(d)/*,$(SRCEXTS))))
override SRCS_CUR_DIR:=$(filter-out $(addprefix $(DIR_CUR)/,$(notdir $(EXCLUDE_SRCS))),$(SRCS_CUR_DIR))


#生成.o & .d文件路径（.o为编译输出的obj文件，.d是编译依赖文件）
override ALL_OBJS_CUR_DIR=$(subst $(DIR_PROJ_ROOT),$(DIR_OBJ),$(addsuffix .o, $(basename $(SRCS_CUR_DIR))))
override ALL_DEP_CUR_DIR=$(ALL_OBJS_CUR_DIR:.o=.d)

#使编译输出的.o目录结构和工程目录一致，防止同名文件的冲突
override DIR_OBJ_OUTPUT=$(subst $(DIR_PROJ_ROOT),$(DIR_OBJ),$(DIR_CUR))

.PHONY : all

#子目录make
%.subdir:
	@for dir in $(ALL_SUB_DIRS);\
	do \
	if test -e $$dir/subdir.mk; \
	then $(MAKE) -C $$dir -f subdir.mk $* ||exit 1; fi;\
	done

all.subdir: $(ALL_SUB_DIRS_TRG)
	@echo $(MAKE) target: $@ in $(DIR_CUR) complete!

%.dirbuild:
	if test -e $*/subdir.mk; then $(MAKE) -C $* -f subdir.mk all ||exit 1; fi;

#包含.d依赖文件
-include $(ALL_DEP_CUR_DIR)

#.d文件生成规则，SRCEXTS修改需要添加此部分内容
$(DIR_OBJ_OUTPUT)/%.d:$(DIR_CUR)/%.c
	@test -d $(DIR_OBJ_OUTPUT) || mkdir -p $(DIR_OBJ_OUTPUT)
	@set -e; rm -f $@; $(CC) -MM $< $(CFLAGS) $(ADD_CFLAGS) $(INCLUDEFLAGS) > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,$(DIR_OBJ_OUTPUT)/\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

$(DIR_OBJ_OUTPUT)/%.d:$(DIR_CUR)/%.C
	@test -d $(DIR_OBJ_OUTPUT) || mkdir -p $(DIR_OBJ_OUTPUT)
	@set -e; rm -f $@; $(CXX) -MM $< $(CXXFLAGS) $(ADD_CXXFLAGS) $(INCLUDEFLAGS) > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,$(DIR_OBJ_OUTPUT)/\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

$(DIR_OBJ_OUTPUT)/%.d:$(DIR_CUR)/%.cc
	@test -d $(DIR_OBJ_OUTPUT) || mkdir -p $(DIR_OBJ_OUTPUT)
	@set -e; rm -f $@; $(CXX) -MM $< $(CXXFLAGS) $(ADD_CXXFLAGS) $(INCLUDEFLAGS) > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,$(DIR_OBJ_OUTPUT)/\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

$(DIR_OBJ_OUTPUT)/%.d:$(DIR_CUR)/%.cpp
	@test -d $(DIR_OBJ_OUTPUT) || mkdir -p $(DIR_OBJ_OUTPUT)
	@set -e; rm -f $@; $(CXX) -MM $< $(CXXFLAGS) $(ADD_CXXFLAGS) $(INCLUDEFLAGS) > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,$(DIR_OBJ_OUTPUT)/\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

$(DIR_OBJ_OUTPUT)/%.d:$(DIR_CUR)/%.CPP
	@test -d $(DIR_OBJ_OUTPUT) || mkdir -p $(DIR_OBJ_OUTPUT)
	@set -e; rm -f $@; $(CXX) -MM $< $(CXXFLAGS) $(ADD_CXXFLAGS) $(INCLUDEFLAGS) > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,$(DIR_OBJ_OUTPUT)/\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

$(DIR_OBJ_OUTPUT)/%.d:$(DIR_CUR)/%.c++
	@test -d $(DIR_OBJ_OUTPUT) || mkdir -p $(DIR_OBJ_OUTPUT)
	@set -e; rm -f $@; $(CXX) -MM $< $(CXXFLAGS) $(ADD_CXXFLAGS) $(INCLUDEFLAGS) > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,$(DIR_OBJ_OUTPUT)/\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

$(DIR_OBJ_OUTPUT)/%.d:$(DIR_CUR)/%.cxx
	@test -d $(DIR_OBJ_OUTPUT) || mkdir -p $(DIR_OBJ_OUTPUT)
	@set -e; rm -f $@; $(CXX) -MM $< $(CXXFLAGS) $(ADD_CXXFLAGS) $(INCLUDEFLAGS) > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,$(DIR_OBJ_OUTPUT)/\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

$(DIR_OBJ_OUTPUT)/%.d:$(DIR_CUR)/%.cp
	@test -d $(DIR_OBJ_OUTPUT) || mkdir -p $(DIR_OBJ_OUTPUT)
	@set -e; rm -f $@; $(CXX) -MM $< $(CXXFLAGS) $(ADD_CXXFLAGS) $(INCLUDEFLAGS) > $@.$$$$; \
	sed 's,\($*\)\.o[ :]*,$(DIR_OBJ_OUTPUT)/\1.o $@ : ,g' < $@.$$$$ > $@; \
	rm -f $@.$$$$

#.o文件编译规则，SRCEXTS修改需要添加此部分内容
$(DIR_OBJ_OUTPUT)/%.o:$(DIR_CUR)/%.c
	$(CC) -c $< $(CFLAGS) $(ADD_CFLAGS) $(INCLUDEFLAGS) -o $@

$(DIR_OBJ_OUTPUT)/%.o:$(DIR_CUR)/%.C
	$(CXX) -c $< $(CXXFLAGS) $(ADD_CXXFLAGS) $(INCLUDEFLAGS) -o $@

$(DIR_OBJ_OUTPUT)/%.o:$(DIR_CUR)/%.cc
	$(CXX) -c $< $(CXXFLAGS) $(ADD_CXXFLAGS) $(INCLUDEFLAGS) -o $@

$(DIR_OBJ_OUTPUT)/%.o:$(DIR_CUR)/%.cpp
	$(CXX) -c $< $(CXXFLAGS) $(ADD_CXXFLAGS) $(INCLUDEFLAGS) -o $@

$(DIR_OBJ_OUTPUT)/%.o:$(DIR_CUR)/%.CPP
	$(CXX) -c $< $(CXXFLAGS) $(ADD_CXXFLAGS) $(INCLUDEFLAGS) -o $@

$(DIR_OBJ_OUTPUT)/%.o:$(DIR_CUR)/%.c++
	$(CXX) -c $< $(CXXFLAGS) $(ADD_CXXFLAGS) $(INCLUDEFLAGS) -o $@

$(DIR_OBJ_OUTPUT)/%.o:$(DIR_CUR)/%.CXX
	$(CXX) -c $< $(CXXFLAGS) $(ADD_CXXFLAGS) $(INCLUDEFLAGS) -o $@

$(DIR_OBJ_OUTPUT)/%.o:$(DIR_CUR)/%.cp
	$(CXX) -c $< $(CXXFLAGS) $(ADD_CXXFLAGS) $(INCLUDEFLAGS) -o $@

init.subdir :
	@test -d $(DIR_OBJ_OUTPUT) || mkdir -p $(DIR_OBJ_OUTPUT)
	@echo $(ALL_OBJS_CUR_DIR) >> $(DIR_OBJ)/AllObj.txt
